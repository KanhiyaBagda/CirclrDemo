{\rtf1\ansi\ansicpg1252\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25200\viewh14100\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
1. Start by creating a Circle class that has attributes such as circle name, center coordinates, and radius.\
2. Use the data from the circlelist.json file to create instances of the Circle class. The size of the circle can be determined by the number of members it contains.\
3. Use the Google Maps API to create a map screen with a marker that can be moved using the current location.\
4. When a user clicks on a circle, open the map screen and pass the circle's center coordinates to the map screen.\
5. On the map screen, create a floating screen that shows the members of the circle. Use the circle_member.json file to get the member list data.\
6. Use the member's lat long to draw markers on the map.\
7. Use MVVM architecture to organize your code.\
8. Create a network class to fetch data from the JSON files. The data fetched should be used to create instances of the Circle and Member classes.\
9 Add icon to top right of the floating screen to capture image and it on map with current location.\
\'a0\
}